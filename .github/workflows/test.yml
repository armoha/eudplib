name: Test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  unittest:
    name: Unittest
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run unit test
      run: |
        cd tests
        python test_unittest.py
        cd ..

  lint:
    name: Lint
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        # FIXME!!!
        # pytest

  mypy:
    name: mypy
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install mypy
        run: pip install mypy
      - name: Run mypy for Python 3.11
        run: mypy eudplib --python-version 3.11 --allow-redefinition
      - name: Run mypy for Python 3.10
        run: mypy eudplib --python-version 3.10 --allow-redefinition

  autoformat:
    name: Autoformat
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - run: python -m pip install black
    - run: black --check --extend-exclude=".*(__epspy__|writebuf).*" --line-length=99 .
    - name: If needed, commit black changes to the pull request
      if: failure()
      run: |
        printenv | grep GITHUB
        git config --global user.name 'armoha'
        git config --global user.email 'kein0011@naver.com'          
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
        git remote -v
        git branch
        git status
        black --extend-exclude=".*(__epspy__|writebuf).*" --line-length=99 .
        git status
        echo ready to commit
        git commit -am "Autoformat Python code with psf/black"
        echo ready to push
        git push
        # git push --force origin

  typos:
    name: Typos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: crate-ci/typos@v1.0.4
        with:
          config: ./.typos.toml
