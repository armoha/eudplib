function square();

const a = [
    square(1),
    square(2),
    square(3),
    square(4),
    square(5)
];

function square(x) {
    const z = EUDArray(5);
    return x * x; // + z.k;
}

function constv_thing() {
    return a[0] + a[1] + a[2] + a[3] + a[4];
}

function switch_test(): EUDArray {
    const ret = EUDArray(6);
    static var x = 1234;
    static var s = EPD(x.getValueAddr());
    // binary search with CP trick
    epdswitch (s, 240) {
        case 96:
            x += 1;
            break;
        case 160:
            x += 3;
            break;
        case 208:  // OK
            x += 5;
            break;
        default:
            x = 0;
    }
    ret[0] = x;  // 1239

    // jump table with CP trick
    epdswitch (s, 56) {
        case 8:
            x += 2;
            break;
        case 16:  // OK
            x += 4;
            break;
        case 24:
            x += 6;
            break;
        case 32:
            x += 8;
            break;
        default:
            x = 0;
    }
    ret[1] = x;  // 1243

    // simple value comparison
    switch (x, 432) {
        case 16:
        case 144:  // OK
            x += 3;
            break;
        default:
            x = 0;
    }
    ret[2] = x;  // 1246

    // simple value comparison 2
    switch (x, 211) {
        case 208:
            x += 5;
            break;
        case 210:
            x += 10;
            break;
        case 211:
            x += 15;
            break;
        default:
            x = 0;
    }
    ret[3] = x;  // 1256

    // jump table
    switch (x, 373) {
        case 96:  // OK
            x += 2;
            break;
        case 100:
            x += 5;
            break;
        case 112:
            x += 8;
            break;
        case 116:
            x += 11;
            break;
        default:
            x = 0;
    }
    ret[4] = x;  // 1258

    // binary search
    switch (x, 511) {
        case 121:
            x += 1;
            break;
        case 179:
            x += 4;
            break;
        case 234:  // OK
            x += 2;
            break;
        case 338:
            x += 8;
            break;
        case 428:
            x += 5;
            break;
        case 453:
            x += 7;
            break;
        default:
            x = 0;
    }
    ret[5] = x;  // 1260
    return ret;
}
