## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *
from eudplib.epscript.helper import _RELIMP, _IGVA, _CGFW, _ARR, _VARR, _SRET, _SV, _ATTW, _ARRW, _ATTC, _ARRC, _L2V, _LVAR, _LSH
# (Line 1) class TestBag extends EUDBag {
# (Line 2) object {
class TestBag(EUDBag):
    # (Line 3) const unit: CUnit;
    _subobject_ = [
        # (Line 4) const n;
        ('unit', CUnit, 'const'),
        # (Line 5) var a, b;
        ('n', None, 'const'),
        # (Line 6) const c: EUDArray;
        'a',
        'b',
        # (Line 11) };
        ('c', EUDArray, 'const'),
        # (Line 12) }

    ]
    # (Line 13) const testgroup = TestBag(100);
    _fields_ = [
    ]

testgroup = _CGFW(lambda: [TestBag(100)], 1)[0]
# (Line 14) function test_bag() {
@EUDFunc
def f_test_bag():
    # (Line 15) for(var n = 1; n <= 5; n++) {
    n = _LVAR([1])
    if EUDWhile()(n <= 5):
        def _t2():
            n.__iadd__(1)
        # (Line 16) const unit = CUnit.from_read(EPD(0x628438));
        unit = CUnit.from_read(EPD(0x628438))
        # (Line 17) CreateUnit(1, "Protoss Observer", "Anywhere", P1);
        # (Line 18) testgroup.add(unit, n, 1, 2, 3);
        DoActions(CreateUnit(1, "Protoss Observer", "Anywhere", P1))
        testgroup.add(unit, n, 1, 2, 3)
        # (Line 19) }
        # (Line 20) var ret = 0;
        EUDSetContinuePoint()
        _t2()
    EUDEndWhile()
    ret = _LVAR([0])
    # (Line 21) foreach(obj: testgroup) {
    for obj in testgroup:
        # (Line 22) ret += obj.n;  // (1~5)
        ret.__iadd__(obj.n)
        # (Line 23) ret += 100;
        ret.__iadd__(100)
        # (Line 24) if (obj.unit.unitType == $U("Protoss Observer")) ret += 1000;
        if EUDIf()(_ATTC(obj.unit, 'unitType') == EncodeUnit("Protoss Observer")):
            ret.__iadd__(1000)
            # (Line 25) if (obj.unit.owner == P1) ret += 10000;
        EUDEndIf()
        if EUDIf()(_ATTC(obj.unit, 'owner') == P1):
            ret.__iadd__(10000)
            # (Line 26) if (obj.a == 1 && obj.b == 2 && obj.c == 3) ret += 100000;
        EUDEndIf()
        if EUDIf()(EUDSCAnd()(_ATTC(obj, 'a') == 1)(_ATTC(obj, 'b') == 2)(_ATTC(obj, 'c') == 3)()):
            ret.__iadd__(100000)
            # (Line 27) }
        EUDEndIf()
        # (Line 28) return ret;  // 555515

    EUDReturn(ret)
    # (Line 29) }
